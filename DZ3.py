

# Задание 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку
# ситуации деления на ноль.

def my_func1(delimoe, delitel):
    try:
        chastnoe = delimoe / delitel
        return chastnoe
    except ValueError:
        return
delimoe = int(input('Введите делимое: '))
delitel = int(input('Введите делитель: '))
if delitel == 0:
    delitel = int(input('На ноль делить нельзя, введите делитель: '))
print('Результат:', my_func1(delimoe, delitel))

# Задание 2.  Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def my_func2(**kvargs):
    return kvargs

print(my_func2(name="Ivanov", surname="Ivan", year=1979, city="Moscow", email="iii@yandex.ru", phone=546199))

# или еще вариант:

def my_func3(name, surname, year, city, email, phone):
    print(f'name - {name}; surname - {surname}; year - {year}; city - {city}; email - {email}; phone - {phone}')

my_func3(name="Ivanov", surname="Ivan", year=1979, city="Moscow", email="iii@yandex.ru", phone=546199)


# Задание 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func_sum(my_list):
    min_element = min(my_list)
    my_list.remove(min_element)
    print("Сумма двух наибольших аргументов равна: ", sum(my_list))

my_list = []
i = 1
while i <= 3:
    my_arg = int(input(f'Введите {i} число: '))
    my_list.append(my_arg)
    i = i + 1

print(my_list)
my_func_sum(my_list)

# Задание 4. Программа принимает действительное положительное число x и
# целое отрицательное число y. Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо
# обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Первый вариант:

def my_func5(x, y):
    return x ** y

x = int(input("Введите целое положительное число x: "))
y = int(input("Введите целое отрицательное число у: "))
print(f"Число {x} в степени {y} равно", (my_func5(x, y)))

# Второй вариант — более сложная реализация без оператора **,
# предусматривающая использование цикла.

def my_func5(x, y):
    i = 1
    perem = 1
    while i <= abs(y):
        perem = perem / x
        i = i + 1
    return perem
x = int(input("Введите целое положительное число x: "))
y = int(input("Введите целое отрицательное число у: "))

print(f"Число {x} в степени {y} равно", (my_func5(x, y)))


# Задание 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму
# этих чисел к полученной ранее сумме и после этого завершить программу.

def my_func_summ(my_list):
    summa = 0
    for i in range(0, len(my_list), 1):
        if my_list[i] == "q":
            break
        else:
            summa = summa + int(my_list[i])
    return summa


stroka = (input('Введите строку чисел, разделенных пробелом : '))
my_list = stroka.split()
result = my_func_summ(my_list)
print("Сумма элементов равна: ", result)
stroka = (input('Введите строку чисел, разделенных пробелом : '))
my_list = stroka.split()
result = result + my_func_summ(my_list)
print("Сумма элементов равна: ", result)


#Задание 6. Реализовать функцию int_func(), принимающую слово из маленьких
# латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.

def int_func6(word):
    print(word.title())

int_func6("text")


